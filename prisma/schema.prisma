// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                         String     @id @default(uuid())
  email                      String     @unique
  name                       String?
  mobile                     String?
  isVerified                 Boolean?   @default(false)
  verificationToken          String?
  verificationTokenExpiresAt DateTime?
  password                   String
  createdAt                  DateTime   @default(now())
  updatedAt                  DateTime   @updatedAt
  avatar                     String?
  role                       Role       @default(user)
  Product                    Product[]
  category                   Category[]
  Cart                       Cart[]
}

model Category {
  id        String    @id @default(uuid())
  name      String
  product   Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  userId    String
}

model Product {
  id          String  @id @default(uuid())
  name        String
  description String
  price       String
  thumbNail   String?

  // brand        String
  // rating       Float
  // numReviews   Int
  countInStock Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  user     User       @relation(fields: [userId], references: [id])
  userId   String
  CartItem CartItem[]
}

model Cart {
  id        String     @id @default(uuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        String   @id @default(uuid())
  Cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, productId])
}

enum Role {
  admin
  user
}
